CREATE PROCEDURE IF NOT EXISTS STG.LOAD_DAILY_FILES()
RETURNS VARCHAR 
LANGUAGE SQL 
EXECUTE AS OWNER 
AS 
$$
DECLARE 
    AUDIT_SID_VAR INT;
BEGIN 

    AUDIT_SID_VAR := (SELECT COALESCE(MAX(AUDIT_SID), 0 )+1 FROM MOOLA.AUDIT  );

    INSERT INTO MOOLA.AUDIT
    (AUDIT_SID, START_DT, SUCCESS_FLAG)
    SELECT
        :AUDIT_SID_VAR,
        CURRENT_TIMESTAMP(),
        FALSE 
    ;
    

    TRUNCATE TABLE STG.TICKERS;
    
    COPY INTO STG.TICKERS 
    FROM (
        SELECT 
            $1, 
            $2, 
            TO_DATE($3, 'YYYYMMDD'), 
            $4, 
            $5,
            $6, 
            $7, 
            $8, 
            $9, 
            $10,
            NULL AS SECURITY_TYPE, 
            NULL AS MARKET,
            METADATA$FILENAME, 
            CURRENT_TIMESTAMP()
        FROM @STG.DAILY_STAGE
        (FILE_FORMAT => 'STG.CSV_SKIP_HEADER_QUOTES')
    )
    PURGE = TRUE
    ;

    INSERT INTO MOOLA.DIM_SECURITIES 
    SELECT 
        T.TICKER,
        NULL AS COMMON_NAME,
        NULL AS SECURITY_TYPE, 
        NULL AS MARKET, 
        CURRENT_TIMESTAMP() AS LOAD_DT, 
        CURRENT_TIMESTAMP() AS UPDATED_DT
    FROM STG.TICKERS T
    LEFT JOIN MOOLA.DIM_SECURITIES DS 
        ON T.TICKER = DS.TICKER 
    WHERE DS.TICKER IS NULL 
    GROUP BY T.TICKER
    ;

    UPDATE STG.TICKERS T 
        SET SECURITY_TYPE = LU.SECURITY_TYPE,
            MARKET = LU.MARKET 
    FROM MOOLA.DIM_SECURITIES LU 
    WHERE LU.TICKER = T.TICKER
    ;

    MERGE INTO MOOLA.TICKERS T
    USING STG.TICKERS S
    ON T.TICKER = S.TICKER 
        AND T.RECORD_DATE = S.RECORD_DATE 
    WHEN NOT MATCHED THEN 
    INSERT
    (TICKER,PERIOD,RECORD_DATE,RECORD_TIME,OPEN_PRICE,
    HIGH_PRICE,LOW_PRICE,CLOSE_PRICE,VOLUME,OPENINT,
    SECURITY_TYPE,MARKET,SOURCE_FILE_NAME,LOAD_DT)
    VALUES 
    (S.TICKER,S.PERIOD,S.RECORD_DATE,S.RECORD_TIME,S.OPEN_PRICE,
    S.HIGH_PRICE,S.LOW_PRICE,S.CLOSE_PRICE,S.VOLUME,S.OPENINT,
    S.SECURITY_TYPE,S.MARKET,S.SOURCE_FILE_NAME,S.LOAD_DT)
    ;

    UPDATE MOOLA.AUDIT
        SET SUCCESS_FLAG = TRUE, 
            END_DT = CURRENT_TIMESTAMP()
    WHERE AUDIT_SID = :AUDIT_SID_VAR
    ;
    
    RETURN 'SUCCESS';

END
$$
;